---
- name: Update the machine
  tags: upd
  apt:
    name: "*"
    state: latest
    force_apt_get: true
    
- name: Install General Essential packages
  tags: essentials
  apt:
    name:
      - ssh
      - nano
      - net-tools
      - tcpdump
      - nmap
      - wireshark
      - git
      - wget
      - psmisc
      - chrony
      - telnet
      - conntrack
      - gcc
      - make
      - pkg-config
      - build-essential
      - libnl-genl-3-dev
      - libxtables-dev
      - autoconf
      - libtool
      - dkms
      - tar
      - automake
      - iptables
      - tree
    state: latest


- name: Grab the kernel header name   
  shell: uname -r
  register: headers

- name: Set CE-Router hostname    
  shell: hostnamectl set-hostname map-t-ce
  when: router_type == 'e'

- name: Set BR-Router hostname    
  shell: hostnamectl set-hostname map-t-br
  when: router_type == 'b'

- name: Install Linux headr for the designated kernel   
  shell: apt-get install linux-headers-"{{ headers.stdout }}"

# If the above Module didn't work: -
# yum update -y
# yum upgrade -y
# reboot

- name: Clear the Cache
  command: apt-get clean all


#- name: Clone Jool-repo
#  tags: noo
#  git:
#    repo: https://github.com/NICMx/Jool.git
#   dest: /jool
#    clone: yes
#   update: yes

- name: Download the standalone .deb packages.
  tags: jool
  shell: | 
    wget https://github.com/NICMx/Jool/releases/download/v4.2.0-rc2/jool-dkms_4.2.0.rc2-1_all.deb
    wget https://github.com/NICMx/Jool/releases/download/v4.2.0-rc2/jool-tools_4.2.0.rc2-1_amd64.deb
  args:
    chdir: /root/

- name: install the standalone .deb packages.
  tags: jool
  shell: | 
    apt-get install ./jool-dkms_4.2.0.rc2-1_all.deb -y
    apt-get install ./jool-tools_4.2.0.rc2-1_amd64.deb -y
  args:
    chdir: /root/



#- name: Download jool
#  tags: jool
  #shell: wget https://github.com/NICMx/Jool/releases/download/v4.1.7/jool-4.1.7.tar.gz 
#  shell: wget https://github.com/NICMx/Jool/releases/download/v4.2.0-rc2/jool-4.2.0.rc2.tar.gz
#  args:
#    chdir: /usr/src

#- name: Decompress jool files
#  tags: jool
  #shell: tar -xzf jool-4.1.7.tar.gz
#  shell: tar -xzf jool-4.2.0.rc2.tar.gz
#  args:
#    chdir: /usr/src


#- name: install Jool
#  tags: jool
  #shell: /sbin/dkms install -m jool -v 4.1.7
#  shell: /sbin/dkms install -m jool -v 4.2.0~rc2
 
 # To UN-install 
  #shell: sudo /sbin/dkms remove -m jool/4.1.7

  
#- name: Compile everything.
#  tags: last
#  shell: |
#    ./configure
 #   make
 #   make install
 # args:
 #   chdir: /usr/src/jool-4.2.0~rc2/


- name: Double-Check if Jool is installed.
  tags: check
  shell: /sbin/dkms status
  register: jool_status

- name: Double-Check jool status output
  tags: check    
  debug:
    msg: "{{ jool_status.stdout }}"

- name: Fail when Jool was Not installed successfully.
  tags: check    
  fail:
    msg: "Jool was NOT installed successfully"
  when: 
    - "'jool' not in jool_status.stdout
      or 'installed' not in jool_status.stdout"
      
- name: Create Jool Networking file in CE Router 
  tags: jool
  template:
    src: CE.txt
    dest: /root/CE.sh
    owner: root
    mode: '755'
  when: router_type == 'e'


- name: Create Jool Networking file in BR Router 
  tags: jool
  template:
    src: BR.txt
    dest: /root/BR.sh
    owner: root
    mode: '755'
  when: router_type == 'b'

- name: Create networking (IP routes) file
  tags: routing
  template:
    src: networking.txt
    dest: /root/networking.sh
    owner: root
    mode: '755'
